// <auto-generated />
using System;
using Mari7.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Mari7.Migrations
{
    [DbContext(typeof(MariContext))]
    [Migration("20191103112026_ModelUpdateNov3_1")]
    partial class ModelUpdateNov3_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Mari7.Models.Currency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("character varying(10)")
                        .HasMaxLength(10);

                    b.Property<string>("InsertUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Mari7.Models.Customer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CustomerFirm")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("IMONumber")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("InsertUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Type")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Mari7.Models.Invoice", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("InsertUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("InvoiceDate")
                        .HasColumnType("integer");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductIMPACode")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ProductNameEN")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ProductNameTR")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int>("RequestedQuantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("SaleTotalPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SaleUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("SupplierID")
                        .HasColumnType("integer");

                    b.Property<string>("SupplierName")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Mari7.Models.MariRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("RoleDescription")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int>("RoleID")
                        .HasColumnType("integer");

                    b.Property<string>("RoleName")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.ToTable("MariRoles");
                });

            modelBuilder.Entity("Mari7.Models.MariUser", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Token")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("Username")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("MariUsers");
                });

            modelBuilder.Entity("Mari7.Models.Order", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CompletionDate")
                        .HasColumnType("integer");

                    b.Property<string>("Currency")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<long>("CurrentUserID")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerName")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("DeliveryPlace")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ETA")
                        .HasColumnType("integer");

                    b.Property<string>("Firm")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("IMO")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("InsertUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<string>("RFQ")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RequestDate")
                        .HasColumnType("integer");

                    b.Property<int>("StepID")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Mari7.Models.OrderDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DeliveryDate")
                        .HasColumnType("integer");

                    b.Property<string>("DeliveryOperationExplanation")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("InsertUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<int>("PrePurchaseDate")
                        .HasColumnType("integer");

                    b.Property<long>("PrePurchaseSupplierID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PrePurchaseTotalPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrePurchaseUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductNameEN")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ProductNameTR")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<decimal>("ProfitRate")
                        .HasColumnType("numeric");

                    b.Property<int>("PurchaseDate")
                        .HasColumnType("integer");

                    b.Property<int>("PurchaseQuantity")
                        .HasColumnType("integer");

                    b.Property<long>("PurchaseSupplierID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PurchaseTotalPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PurchaseUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("ReceiveDate")
                        .HasColumnType("integer");

                    b.Property<string>("ReceiveOperationExpanation")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("RequestedQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("SaleApprovalDate")
                        .HasColumnType("integer");

                    b.Property<int>("SaleOfferDate")
                        .HasColumnType("integer");

                    b.Property<decimal>("SaleOfferTotalPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("SaleOfferUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("Size")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("StockUnitPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Mari7.Models.OrderStep", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ActionID")
                        .HasColumnType("integer");

                    b.Property<int>("ActionUserID")
                        .HasColumnType("integer");

                    b.Property<string>("InsertUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<long>("OrderID")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("integer");

                    b.Property<string>("StepExplanation")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<int>("StepID")
                        .HasColumnType("integer");

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<long?>("UserID1")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("UserID1");

                    b.ToTable("OrderSteps");
                });

            modelBuilder.Entity("Mari7.Models.Product", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("DescriptionTR")
                        .HasColumnType("character varying(1000)")
                        .HasMaxLength(1000);

                    b.Property<string>("InsertUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameEN")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NameTR")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Mari7.Models.ProductPrice", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CurrencyID")
                        .HasColumnType("integer");

                    b.Property<string>("InsertUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("MinQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("PriceDate")
                        .HasColumnType("integer");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("Size")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<long>("SupplierID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("CurrencyID");

                    b.HasIndex("ProductID");

                    b.HasIndex("SupplierID");

                    b.ToTable("ProductPrices");
                });

            modelBuilder.Entity("Mari7.Models.StepRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("RoleID")
                        .HasColumnType("integer");

                    b.Property<int>("StepID")
                        .HasColumnType("integer");

                    b.Property<long?>("StepID1")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.HasIndex("StepID1");

                    b.ToTable("StepRoles");
                });

            modelBuilder.Entity("Mari7.Models.Stock", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("InsertUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<string>("PurchasedFrom")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Size")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Mari7.Models.Supplier", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Country")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Description")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UpdateDate")
                        .HasColumnType("integer");

                    b.Property<string>("UpdateUser")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Mari7.Models.UserRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("RoleID")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<long?>("UserID1")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID1");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Mari7.Models.OrderDetail", b =>
                {
                    b.HasOne("Mari7.Models.Order", "Order")
                        .WithMany("Detail")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mari7.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mari7.Models.OrderStep", b =>
                {
                    b.HasOne("Mari7.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mari7.Models.MariUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID1");
                });

            modelBuilder.Entity("Mari7.Models.ProductPrice", b =>
                {
                    b.HasOne("Mari7.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mari7.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mari7.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mari7.Models.StepRole", b =>
                {
                    b.HasOne("Mari7.Models.MariRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mari7.Models.OrderStep", "Step")
                        .WithMany()
                        .HasForeignKey("StepID1");
                });

            modelBuilder.Entity("Mari7.Models.Stock", b =>
                {
                    b.HasOne("Mari7.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mari7.Models.UserRole", b =>
                {
                    b.HasOne("Mari7.Models.MariRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mari7.Models.MariUser", "User")
                        .WithMany("RoleList")
                        .HasForeignKey("UserID1");
                });
#pragma warning restore 612, 618
        }
    }
}
